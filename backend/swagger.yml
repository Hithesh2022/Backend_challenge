openapi: 3.0.0
info:
  title: Backend-Challenge
  description: Backend - API Documentation
  version: 1.0.0

servers:
  - url: http://localhost:5000
    description: Local server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: To get the token, use the login API
  schemas:
    Login:
      type: object
      properties:
        email:
          type: string
          example: abc@gmail.com
        password:
          type: string
          example: 123456
    SignUp:
      type: object
      properties:
        name:
          type: string
          example: John Deo
        email:
          type: string
          example: abc@gmail.com
        password:
          type: string
          example: 123456
        phonenumber:
          type: number
          example: 1234567890
    Post:
      type: object
      properties:
        message:
          type: string
          example: This is my post
        comments:
          type: array
          items:
            type: object
            properties:
              user:
                type: string
                example: username
              message:
                type: string
                example: This is a comment
    Comment:
      type: object
      properties:
        user:
          type: string
          example: username
        message:
          type: string
          example: This is my comment

  

tags:
  - name: Authentication
    description: Everything about Authentication API's
  - name: Manage Profile
    description: Manage Profile API's
  - name: Manage Post
    description: Operations about user Post/comment functions

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login
      description: Login to the API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The JWT token.
                  user:
                    type: object
                    description: The user object.
                    properties:
                      _id:
                        type: string
                        description: The user ID.
                      name:
                        type: string
                        description: The user name.
                      email:
                        type: string
                        description: The user email.
        "400":
          description: Email and password are required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

  /auth/signup:
    post:
      tags:
        - Authentication
      summary: Signup
      description: Sign Up to the API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUp'
      responses:
        "200":
          description: Signup successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: string
                    description: OK message.
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
        "500":
          description: Error creating user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Blacklist the cookies so the user can logout and login with new cookies
      description: Logout user
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: string
                    description: OK message.
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Token not found.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: This session has expired. Please login.
        "402":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error.
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: User not found. Please signup.
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

  /auth/change-name:
    post:
      tags:
        - Manage Profile
      summary: Change name of the user
      description: Update names of the current user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              example:
                name: "jay"
      responses:
        "200":
          description: Change name successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: OK message.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

  /auth/change-email:
    post:
      tags:
        - Manage Profile
      summary: Change email of the user
      description: Update email of the current user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              example:
                email: "jay123@gmail.com"
      responses:
        "200":
          description: Change email successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: OK message.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

  /auth/create-post:
    post:
      tags:
        - Manage Post
      summary: Create Post
      description: Create a post in which other users can comment
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "This is a post"

      responses:
        "200":
          description: Post created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: OK message.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Failed to create Post.

  /auth/comment/{id}:
    post:
      tags:
        - Manage Post
      summary: Create Comment on Post
      description: Create a comment on a particular post using the post ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: object
          example: http://localhost:5000/auth/comment/1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "This is a comment on post ID 1234567890"
      responses:
        "200":
          description: Comment added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: OK message.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Failed to comment on Post.
  paths:
  /auth/view-post:
    get:
      tags:
        - Manage Post
      summary: View Post
      description: View post of the current user
      security:
        - BearerAuth: []
      responses:
        "200":
          description: View post successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    description: The user object.
                    properties:
                      _id:
                        type: string
                        description: The user ID.
                      name:
                        type: string
                        description: The user name.
                      email:
                        type: string
                        description: The user email.
                      posts:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              description: The post ID.
                            message:
                              type: string
                              description: The post message.
                            comments:
                              type: array
                              items:
                                type: object
                                properties:
                                  user:
                                    type: string
                                    description: The user name.
                                  comment:
                                    type: string
                                    description: The comment.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: This session has expired. Please login.
        "402":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error.
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: User not found. Please signup.
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

  /auth/view-profile:
    get:
      tags:
        - Manage Profile
      summary: View Profile
      description: View profile of the current user
      security:
        - BearerAuth: []
      responses:
        "200":
          description: View profile successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    description: The user object.
                    properties:
                      _id:
                        type: string
                        description: The user ID.
                      name:
                        type: string
                        description: The user name.
                      email:
                        type: string
                        description: The user email.
                      photo:
                        type: buffer
                        description: The user photo.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: This session has expired. Please login.
        "402":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error.
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: User not found. Please signup.
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

  /auth/upload-photo:
    post:
      tags:
        - Manage Profile
      summary: Upload Profile Photo
      description: Upload profile photo of the current user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
      responses:
        "200":
          description: Upload photo successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: OK message.
        "400":
          description: No File Uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Bad request.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: This session has expired. Please login.
        
        "403":
          description: User not found. Please signup
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Unauthorized.
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
